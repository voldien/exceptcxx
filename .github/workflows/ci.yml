name: ExceptCxx
on:
  push:
  pull_request:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  ANDROID_NDK_VERSION: 23.2.8568313

jobs:
  macos:
    name: "macOS amd64 ${{matrix.cfg.name}}"
    runs-on: ${{matrix.cfg.os}}
    strategy:
      fail-fast: false
      matrix:
        cfg:
          - { os: macos-10.15,  name: "Catalina", dist: true}
          - { os: macos-11,     name: "Big Sur",  dist: false}

    steps:
      - name : ExceptCXX Checkout
        uses: actions/checkout@v2
        with:
          submodules: "recursive"

      - name: Install homebrew packages
        run: brew install cmake fmt binutils

      - name: Create Build Environment
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: Configure CMake

        shell: bash
        working-directory: ${{runner.workspace}}/build

        run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCXXEXCEPT_BUILD_WITH_TEST=ON

      - name: Build Library
        working-directory: ${{runner.workspace}}/build
        shell: bash

        run: cmake --build . --config $BUILD_TYPE

      - name: Test
        working-directory: ${{runner.workspace}}/build
        shell: bash

        run: ctest -C $BUILD_TYPE --output-on-failure --verbose
      
  linux:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        platform: [x32, x64]
        compiler: [gcc, clang]
        flavor: [ RelWithDebInfo, Coverage ]
        include:
        - os: ubuntu-18.04
          platform: x64
          compiler: clang
        - os: ubuntu-18.04
          platform: x32
          compiler: clang
        - os: ubuntu-18.04
          platform: x64
          compiler: gcc
        - os: ubuntu-18.04
          platform: x32
          compiler: gcc
    name: C++ Exception Library - Linux (${{matrix.os}}, ${{matrix.platform}}, ${{matrix.compiler}})
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"

      - name: Configure dependencies
        run: |
          sudo apt-get update
          sudo apt-get install cmake g++ libfmt-dev binutils-dev libgtest-dev googletest

      - name: Create Build Environment

        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: Configure CMake

        shell: bash
        working-directory: ${{runner.workspace}}/build

        env:
          CC: ${{ matrix.compiler }}
        run: |
          cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCXXEXCEPT_BUILD_WITH_TEST=ON \
          -DCXXEXCEPT_BUILD_OPT_BUILD_PACKAGES=ON

      - name: Build Library
        working-directory: ${{runner.workspace}}/build
        shell: bash

        run: cmake --build . --config $BUILD_TYPE

      - name: Test
        working-directory: ${{runner.workspace}}/build
        shell: bash

        run: ctest -C $BUILD_TYPE --output-on-failure --verbose

      - name: Construct package
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: cpack

      - name: Move deb packages
        working-directory: ${{runner.workspace}}/build
        run: |
          mkdir deb && mv -v *.deb deb/

      - name: Upload deb packages
        uses: actions/upload-artifact@v2
        with:
          name: package
          path: ${{runner.workspace}}/build/deb
  Window:
    strategy:
      fail-fast: false # Don't cancel other matrix jobs if one fails
      matrix:
        cfg:
        - { name: i386,   arch: x86, chocoargs: "--x86"}
        - { name: amd64,  arch: x64, chocoargs: ""}

    name: "C++ Exception Library - Windows MSVC ${{matrix.cfg.name}}"
    runs-on: "windows-2019"
    steps:
      - name : ExceptCXX Checkout
        uses: actions/checkout@v2
        with:
          submodules: "recursive"

      - name: Configure MSBuild
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.cfg.arch }}

      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Install NuGet packages
        working-directory: ${{env.GITHUB_WORKSPACE}}
        run: |
          nuget install googletest -Version 1.8.3  -OutputDirectory .
          nuget install gtest -Version 1.7.0 -OutputDirectory .

      - name: Create Build Environment

        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: Configure CMake

        shell: bash
        working-directory: ${{runner.workspace}}/build

        run: |
          cmake $GITHUB_WORKSPACE -G "Visual Studio 16 2019" -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCXXEXCEPT_BUILD_WITH_TEST=ON 
      
      - name: Build Library
        working-directory: ${{runner.workspace}}/build
        shell: bash

        run: cmake --build . --config $BUILD_TYPE

      - name: Test
        working-directory: ${{runner.workspace}}/build
        shell: bash

        run: ctest -C $BUILD_TYPE --output-on-failure --verbose

  Android:
    runs-on: ubuntu-20.04
    name: "C++ Exception Library - Android"

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"

      - name: Configure dependencies
        run: |
          sudo apt-get update
          sudo apt-get install cmake g++ libfmt-dev binutils-dev libgtest-dev googletest

      - name: Install Android NDK r21
        run: |
          sudo ${ANDROID_HOME}/tools/bin/sdkmanager --install 'ndk;${{env.ANDROID_NDK_VERSION}}'

      - name: Set up Java 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Create Build Environment

        run: cmake -E make_directory ${{runner.workspace}}/build 
      - name: Configure CMake

        shell: bash
        working-directory: ${{runner.workspace}}/build
        env:
          ANDROID_NDK_ROOT: /usr/local/lib/android/sdk/ndk/${{env.ANDROID_NDK_VERSION}}/
        run: cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_ROOT/build/cmake/android.toolchain.cmake \
          -DANDROID_NDK=$ANDROID_NDK_ROOT -DANDROID_ABI="armeabi-v7a"  -DANDROID_PLATFORM=android-16 -D__ANDROID__=1  $GITHUB_WORKSPACE

      - name: Build Library
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: cmake --build . --config $BUILD_TYPE