name: Linux Build
on: [push, pull_request]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
jobs:
  Linux:
    runs-on: "ubuntu-20.04"
    name: Core
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"

      - name: Configure dependencies
        run: |
          sudo apt-get update
          sudo apt-get install pkg-config libjson-c-dev libxml2-dev libyaml-dev libsdl2-dev \
          fswatch libfreeimage-dev libavcodec-dev libavfilter-dev libavformat-dev libfreetype6-dev libssl-dev
          sudo apt-get install libsdl2-dev libglew-dev libvulkan-dev libgl1-mesa-dev opencl-headers \
          libgtest-dev libsubunit-dev qt5-default libassimp-dev glslang-tools libogg-dev libopus-dev libvorbis-dev \
          libzip-dev libbullet-dev libopenal-dev mesa-common-dev libgtk-3-dev ocl-icd-opencl-dev libnoise-dev libvdpau-dev \
          libalut-dev libspdlog-dev libbz2-dev

      - name: Create Build Environment
        # Some projects don't allow in-source building, so create a separate build directory
        # We'll use this as our working directory for all subsequent commands
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: Configure CMake
        # Use a bash shell so we can use the same syntax for environment variable
        # access regardless of the host operating system
        shell: bash
        working-directory: ${{runner.workspace}}/build
        # Note the current convention is to use the -S and -B options here to specify source
        # and build directories, but this is only available with CMake 3.13 and higher.
        # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
        run: |
          cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_WITH_TEST=ON -DBUILD_WITH_UBSAN=ON \
          -DBUILD_WITH_ASAN=ON -DBUILD_WITH_TEST=ON -DBUILD_WITH_INSTALL=OFF -DBUILD_WITH_COVERAGE=ON -DBUILD_OPT_BUILD_PACKAGES=ON

      - name: Build-Core
        working-directory: ${{runner.workspace}}/build
        shell: bash
        # Execute the build.  You can specify a specific target with "--target <NAME>"
        run: cmake --build . --config $BUILD_TYPE

      - name: Test
        working-directory: ${{runner.workspace}}/build
        shell: bash
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: ctest -C $BUILD_TYPE

      - name: Construct package
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: cpack

      - name: Move deb packages
        working-directory: ${{runner.workspace}}/build
        run: |
          mkdir deb && mv -v *.deb deb/

      - name: Upload deb packages
        uses: actions/upload-artifact@v2
        with:
          name: package
          path: ${{runner.workspace}}/build/deb
