name: ExceptCxx - Linux Build
on: [push, pull_request]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        platform: [x32, x64]
        compiler: [gcc, clang]
        flavor: [ RelWithDebInfo, Coverage ]
        include:
        - os: ubuntu-latest
          platform: x64
          compiler: clang
        - os: ubuntu-latest
          platform: x32
          compiler: clang
        - os: ubuntu-latest
          platform: x64
          compiler: gcc
        - os: ubuntu-latest
          platform: x32
          compiler: gcc
    name: C++ Exception Library
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"

      - name: Configure dependencies
        run: |
          sudo apt-get update
          sudo apt-get install cmake g++ libfmt-dev binutils-dev libgtest-dev

      - name: Create Build Environment
        # Some projects don't allow in-source building, so create a separate build directory
        # We'll use this as our working directory for all subsequent commands
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: Configure CMake
        # Use a bash shell so we can use the same syntax for environment variable
        # access regardless of the host operating system
        shell: bash
        working-directory: ${{runner.workspace}}/build
        # Note the current convention is to use the -S and -B options here to specify source
        # and build directories, but this is only available with CMake 3.13 and higher.
        # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
        env:
          CC: ${{ matrix.compiler }}
        run: |
          cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCXXEXCEPT_BUILD_WITH_TEST=ON -DCXXEXCEPT_BUILD_WITH_UBSAN=ON \
          -DCXXEXCEPT_BUILD_WITH_ASAN=ON -DCXXEXCEPT_BUILD_WITH_INSTALL=OFF -DCXXEXCEPT_BUILD_OPT_BUILD_PACKAGES=ON

      - name: Build Library
        working-directory: ${{runner.workspace}}/build
        shell: bash
        # Execute the build.  You can specify a specific target with "--target <NAME>"
        run: cmake --build . --config $BUILD_TYPE

      - name: Test
        working-directory: ${{runner.workspace}}/build
        shell: bash
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: ctest -C $BUILD_TYPE --output-on-failure --verbose

      - name: Construct package
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: cpack

      - name: Move deb packages
        working-directory: ${{runner.workspace}}/build
        run: |
          mkdir deb && mv -v *.deb deb/

      - name: Upload deb packages
        uses: actions/upload-artifact@v2
        with:
          name: package
          path: ${{runner.workspace}}/build/deb
