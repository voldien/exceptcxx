name: ExceptCxx - Window Build
on: [push,pull_request]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  Window:
    # Windows 10 with latest image
    runs-on: "windows-latest"

    name: C++ Exception Library

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"

      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Install NuGet packages
        working-directory: ${{env.GITHUB_WORKSPACE}}
        run: |
          nuget install googletest -Version 1.8.3  -OutputDirectory .
          nuget install gtest -Version 1.7.0 -OutputDirectory .

      - name: Create Build Environment
        # Some projects don't allow in-source building, so create a separate build directory
        # We'll use this as our working directory for all subsequent commands
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: Configure CMake
        # Use a bash shell so we can use the same syntax for environment variable
        # access regardless of the host operating system
        shell: bash
        working-directory: ${{runner.workspace}}/build
        # Note the current convention is to use the -S and -B options here to specify source 
        # and build directories, but this is only available with CMake 3.13 and higher.  
        # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
        run: |
          cmake $GITHUB_WORKSPACE -G "Visual Studio 16 2019" -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCXXEXCEPT_BUILD_WITH_TEST=OFF -DCXXEXCEPT_BUILD_WITH_UBSAN=ON \
          -DCXXEXCEPT_BUILD_WITH_ASAN=ON -DCXXEXCEPT_BUILD_WITH_INSTALL=OFF -DCXXEXCEPT_BUILD_OPT_BUILD_PACKAGES=ON 
      
      - name: Build Library
        working-directory: ${{runner.workspace}}/build
        shell: bash
        # Execute the build.  You can specify a specific target with "--target <NAME>"
        run: cmake --build . --config $BUILD_TYPE

      - name: Test
        working-directory: ${{runner.workspace}}/build
        shell: bash
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: ctest -C $BUILD_TYPE --output-on-failure --verbose
